{
  "name": "apollo",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/apollo/src",
  "projectType": "application",
  "targets": {
    "copy-schema": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          // windows
          // "copy apps\\apollo\\prisma\\schema.prisma dist\\apps\\apollo\\schema.prisma"
          // linux-based
          "cp apps/apollo/prisma/schema.prisma dist/apps/apollo/schema.prisma"
        ]
      }
    },
    "build": {
      "executor": "@nrwl/esbuild:esbuild",
      "outputs": [
        "{options.outputPath}"
      ],
      "options": {
        "outputPath": "dist/apps/apollo",
        "format": [
          "cjs"
        ],
        "main": "apps/apollo/src/main.ts",
        "tsConfig": "apps/apollo/tsconfig.app.json",
        "assets": [
          "apps/apollo/src/assets",
          {
            "input": "apps/apollo/prisma",
            "glob": "schema.prisma",
            "output": "."
          }
        ],
        "esbuildOptions": {
          "sourcemap": true,
          "outExtension": {
            ".js": ".js"
          }
        }
      },
      "configurations": {
        "production": {
          "esbuildOptions": {
            "sourcemap": false
          }
        }
      }
    },
    "serve": {
      "executor": "@nrwl/js:node",
      "options": {
        "buildTarget": "apollo:build"
      },
      "configurations": {
        "production": {
          "buildTarget": "apollo:build:production"
        }
      }
    },
    // The literal hackiest hack that has ever been hacked
    "startup": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          // windows
          // "PING 1.1.1.1 -n 4 > NUL && echo Now copying file && nx nothing apollo",
          // linux
          "sleep 4 && echo Now copying file && nx copy-schema apollo",
          "nx serve apollo"
        ]
      }
    },
    "lint": {
      "executor": "@nrwl/linter:eslint",
      "outputs": [
        "{options.outputFile}"
      ],
      "options": {
        "lintFilePatterns": [
          "apps/apollo/**/*.ts"
        ]
      }
    },
    "test": {
      "executor": "@nrwl/jest:jest",
      "outputs": [
        "{workspaceRoot}/coverage/{projectRoot}"
      ],
      "options": {
        "jestConfig": "apps/apollo/jest.config.ts",
        "passWithNoTests": true
      },
      "configurations": {
        "ci": {
          "ci": true,
          "codeCoverage": true
        }
      }
    },
    "prisma-generate": {
      "executor": "@nx-tools/nx-prisma:generate",
      "options": {
        "schema": "prisma/schema.prisma"
      }
    },
    "prisma-migrate": {
      "executor": "@nx-tools/nx-prisma:migrate",
      "options": {
        "schema": "prisma/schema.prisma"
      }
    },
    "prisma-pull": {
      "executor": "@nx-tools/nx-prisma:pull",
      "options": {
        "schema": "prisma/schema.prisma"
      }
    },
    "prisma-push": {
      "executor": "@nx-tools/nx-prisma:push",
      "options": {
        "schema": "prisma/schema.prisma"
      }
    },
    "prisma-deploy": {
      "executor": "@nx-tools/nx-prisma:deploy",
      "options": {
        "schema": "prisma/schema.prisma"
      }
    },
    "prisma-status": {
      "executor": "@nx-tools/nx-prisma:status",
      "options": {
        "schema": "prisma/schema.prisma"
      }
    },
    "prisma-studio": {
      "executor": "@nx-tools/nx-prisma:studio",
      "options": {
        "schema": "prisma/schema.prisma"
      }
    }
  },
  "tags": []
}